<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>env</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>QA</string>
              <string>DEV</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>$env</arg1>
        <arg2>QA</arg2>
        <ignoreCase>true</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <jenkins.plugins.publish__over__ssh.BapSshBuilderPlugin plugin="publish-over-ssh@1.13">
          <delegate>
            <consolePrefix>SSH: </consolePrefix>
            <delegate>
              <publishers>
                <jenkins.plugins.publish__over__ssh.BapSshPublisher>
                  <configName>agent1</configName>
                  <verbose>false</verbose>
                  <transfers>
                    <jenkins.plugins.publish__over__ssh.BapSshTransfer>
                      <remoteDirectory>workspace</remoteDirectory>
                      <sourceFiles>**/target/../../../a/*.sh</sourceFiles>
                      <excludes></excludes>
                      <removePrefix>hellogitworld/target</removePrefix>
                      <remoteDirectorySDF>false</remoteDirectorySDF>
                      <flatten>false</flatten>
                      <cleanRemote>false</cleanRemote>
                      <noDefaultExcludes>false</noDefaultExcludes>
                      <makeEmptyDirs>false</makeEmptyDirs>
                      <patternSeparator>[, ]+</patternSeparator>
                      <execCommand></execCommand>
                      <execTimeout>120000</execTimeout>
                      <usePty>false</usePty>
                    </jenkins.plugins.publish__over__ssh.BapSshTransfer>
                  </transfers>
                  <useWorkspaceInPromotion>false</useWorkspaceInPromotion>
                  <usePromotionTimestamp>false</usePromotionTimestamp>
                  <credentials class="jenkins.plugins.publish_over_ssh.BapSshCredentials">
                    <secretPassphrase>R1/inyr/ecHIrkA3G9DXoql+knbcEjdXnVyZ4Z5iFNw=</secretPassphrase>
                    <key></key>
                    <keyPath></keyPath>
                    <username>root</username>
                  </credentials>
                </jenkins.plugins.publish__over__ssh.BapSshPublisher>
              </publishers>
              <continueOnError>false</continueOnError>
              <failOnError>true</failOnError>
              <alwaysPublishFromMaster>false</alwaysPublishFromMaster>
              <hostConfigurationAccess class="jenkins.plugins.publish_over_ssh.BapSshPublisherPlugin" reference="../.."/>
            </delegate>
          </delegate>
        </jenkins.plugins.publish__over__ssh.BapSshBuilderPlugin>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>$env</arg1>
        <arg2>DEV</arg2>
        <ignoreCase>true</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <hudson.tasks.Shell>
          <command>echo $env</command>
        </hudson.tasks.Shell>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>